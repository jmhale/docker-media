version: '3.3'
networks:
  backend:
  frontend:
    external: true
volumes:
  nginx-certs:
services:
  plex:
    hostname: plex
    image: linuxserver/plex
    restart: always
    ports:
      - "32400:32400"
    environment:
      - VERSION=latest
      - PUID=1002
      - PGID=2001
      - TZ=Etc/UTC
    volumes:
      - /root/docker/storage/plex/config:/config
      - /root/docker/storage/plex/cache:/cache
      - /nfs/media/movies:/media/movies:ro
      - /nfs/media/tv:/media/tv:ro
      - /nfs/media/music:/media/music:ro
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.plex-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.plex-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.plex-http.rule=Host(`plex.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.plex-http.middlewares=plex-redirect-redirectscheme"
      - "traefik.http.routers.plex-http.entrypoints=http"
      - "traefik.http.routers.plex-https.rule=Host(`plex.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.plex-https.entrypoints=https"
      - "traefik.http.routers.plex-https.service=plex-https"
      - "traefik.http.routers.plex-https.tls.certresolver=cloudflare"
      - "traefik.http.services.plex-https.loadbalancer.server.port=32400"
  plexpy:
    hostname: plexpy
    image: linuxserver/tautulli
    restart: always
    depends_on:
      - plex
    environment:
      - TZ=Etc/UTC
      - PUID=1002
      - PGID=2001
    volumes:
      - /nfs/other/docker/config/plexpy/config:/config
      - /root/docker/storage/plex/config/Library/Application\ Support/Plex\ Media\ Server/Logs/:/logs:ro
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.tautulli-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.tautulli-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.tautulli-http.rule=Host(`tautulli.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.tautulli-http.middlewares=tautulli-redirect-redirectscheme"
      - "traefik.http.routers.tautulli-http.entrypoints=http"
      - "traefik.http.routers.tautulli-https.rule=Host(`tautulli.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.tautulli-https.entrypoints=https"
      - "traefik.http.routers.tautulli-https.service=tautulli-https"
      - "traefik.http.routers.tautulli-https.tls.certresolver=cloudflare"
      - "traefik.http.services.tautulli-https.loadbalancer.server.port=8181"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.tautulli-https.middlewares=oauth"
  sonarr:
    hostname: sonarr
    image: linuxserver/sonarr
    depends_on:
      - sabnzbd
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    restart: always
    environment:
      - PUID=3001
      - PGID=2001
      - TZ=Etc/UTC
    volumes:
      - /nfs/other/docker/config/sonarr/config:/config
      - /nfs/media/tv:/media/tv
      - /root/docker/storage/sabnzbd/downloads:/downloads
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.sonarr-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sonarr-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.sonarr-http.rule=Host(`sonarr.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.sonarr-http.middlewares=sonarr-redirect-redirectscheme"
      - "traefik.http.routers.sonarr-http.entrypoints=http"
      - "traefik.http.routers.sonarr-https.rule=Host(`sonarr.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.sonarr-https.entrypoints=https"
      - "traefik.http.routers.sonarr-https.service=sonarr-https"
      - "traefik.http.routers.sonarr-https.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr-https.loadbalancer.server.port=8989"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.sonarr-https.middlewares=oauth"
  radarr:
    hostname: radarr
    image: linuxserver/radarr
    depends_on:
      - sabnzbd
    ulimits:
      nofile:
        soft: 4096
        hard: 4096
    restart: always
    environment:
      - PUID=3001
      - PGID=2001
      - TZ=Etc/UTC
    volumes:
      - /nfs/other/docker/config/radarr/config:/config
      - /nfs/media/movies:/media/movies
      - /root/docker/storage/sabnzbd/downloads:/downloads
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.radarr-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.radarr-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.radarr-http.rule=Host(`radarr.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.radarr-http.middlewares=radarr-redirect-redirectscheme"
      - "traefik.http.routers.radarr-http.entrypoints=http"
      - "traefik.http.routers.radarr-https.rule=Host(`radarr.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.radarr-https.entrypoints=https"
      - "traefik.http.routers.radarr-https.service=radarr-https"
      - "traefik.http.routers.radarr-https.tls.certresolver=cloudflare"
      - "traefik.http.services.radarr-https.loadbalancer.server.port=7878"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.radarr-https.middlewares=oauth"
  sabnzbd:
    hostname: sabnzbd
    image: linuxserver/sabnzbd
    ulimits:
     nofile:
       soft: 4096
       hard: 4096
    restart: always
    environment:
     - PGID=2001
     - PUID=3001
     - TZ=Etc/UTC
    volumes:
     - /nfs/other/docker/config/sabnzbd/config:/config
     - /root/docker/storage/sabnzbd/downloads:/downloads
     - /root/docker/storage/sabnzbd/incomplete:/incomplete-downloads
    networks:
     - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.sabnzbd-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sabnzbd-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.sabnzbd-http.rule=Host(`sabnzbd.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.sabnzbd-http.middlewares=sabnzbd-redirect-redirectscheme"
      - "traefik.http.routers.sabnzbd-http.entrypoints=http"
      - "traefik.http.routers.sabnzbd-https.rule=Host(`sabnzbd.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.sabnzbd-https.entrypoints=https"
      - "traefik.http.routers.sabnzbd-https.service=sabnzbd-https"
      - "traefik.http.routers.sabnzbd-https.tls.certresolver=cloudflare"
      - "traefik.http.services.sabnzbd-https.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.sabnzbd-https.middlewares=oauth"
  qbittorrent:
    image: linuxserver/qbittorrent
    hostname: qbit
    environment:
      - PGID=2001
      - PUID=3001
      - TZ=Etc/UTC
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - /nfs/other/docker/config/qbittorrent/config:/config
      - /nfs/other/docker/config/qbittorrent/downloads:/downloads
    restart: unless-stopped
    networks:
     - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.qbittorrent-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.qbittorrent-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.qbittorrent-http.rule=Host(`qbit.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.qbittorrent-http.middlewares=qbittorrent-redirect-redirectscheme"
      - "traefik.http.routers.qbittorrent-http.entrypoints=http"
      - "traefik.http.routers.qbittorrent-https.rule=Host(`qbit.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.qbittorrent-https.entrypoints=https"
      - "traefik.http.routers.qbittorrent-https.service=qbittorrent-https"
      - "traefik.http.routers.qbittorrent-https.tls.certresolver=cloudflare"
      - "traefik.http.services.qbittorrent-https.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.qbittorrent-https.middlewares=oauth"
  heimdall:
    hostname: heimdall
    image: linuxserver/heimdall
    restart: always
    environment:
      - PUID=5001
      - PGID=5001
      - TZ=Etc/UTC
    volumes:
      - /nfs/other/docker/config/heimdall/config:/config
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.heimdall-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.heimdall-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.heimdall-http.rule=Host(`heimdall.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.heimdall-http.middlewares=heimdall-redirect-redirectscheme"
      - "traefik.http.routers.heimdall-http.entrypoints=http"
      - "traefik.http.routers.heimdall-https.rule=Host(`heimdall.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.heimdall-https.entrypoints=https"
      - "traefik.http.routers.heimdall-https.service=heimdall-https"
      - "traefik.http.routers.heimdall-https.tls.certresolver=cloudflare"
      - "traefik.http.services.heimdall-https.loadbalancer.server.port=80"
  traefik:
    hostname: traefik
    container_name: traefik
    image: traefik:latest
    restart: always
    domainname: ${COMMON_DOMAIN}
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cloudflare.acme.email=${COMMON_ADMIN_EMAIL}"
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    networks:
      - frontend
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/docker/traefik/letsencrypt:/letsencrypt
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.tls.certresolver=cloudflare"
        - "traefik.http.routers.api.tls.domains[0].main=${COMMON_DOMAIN}"
        - "traefik.http.routers.api.tls.domains[0].sans=*.${COMMON_DOMAIN}"
        - "traefik.http.middlewares.traefik-redirect-redirectscheme.redirectscheme.scheme=https"
        - "traefik.http.middlewares.traefik-redirect-redirectscheme.redirectscheme.permanent=true"
        - "traefik.http.routers.traefik-http.rule=Host(`traefik.${COMMON_DOMAIN}`)"
        - "traefik.http.routers.traefik-http.middlewares=traefik-redirect-redirectscheme"
        - "traefik.http.routers.traefik-http.entrypoints=http"
        - "traefik.http.routers.traefik-https.rule=Host(`traefik.${COMMON_DOMAIN}`)"
        - "traefik.http.routers.traefik-https.entrypoints=https"
        - "traefik.http.routers.traefik-https.service=traefik-https"
        - "traefik.http.routers.traefik-https.tls.certresolver=cloudflare"
        - "traefik.http.services.traefik-https.loadbalancer.server.port=8080"
        - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
        - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
        - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
        - "traefik.http.routers.traefik-https.middlewares=oauth"
  portainer:
    image: portainer/portainer
    restart: always
    command: -H unix:///var/run/docker.sock --no-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /nfs/other/docker/config/portainer/data:/data
      - /nfs/other/docker/config/shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.portainer-redirect-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.portainer-redirect-redirectscheme.redirectscheme.permanent=true"
      - "traefik.http.routers.portainer-http.rule=Host(`portainer.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.portainer-http.middlewares=portainer-redirect-redirectscheme"
      - "traefik.http.routers.portainer-http.entrypoints=http"
      - "traefik.http.routers.portainer-https.rule=Host(`portainer.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.portainer-https.entrypoints=https"
      - "traefik.http.routers.portainer-https.service=portainer-https"
      - "traefik.http.routers.portainer-https.tls.certresolver=cloudflare"
      - "traefik.http.services.portainer-https.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.portainer-https.middlewares=oauth"
  oauth:
    image: thomseddon/traefik-forward-auth
    hostname: oauth
    container_name: oauth
    restart: always
    networks:
      - frontend
    environment:
      - PROVIDERS_OIDC_CLIENT_ID=${PROVIDERS_OIDC_CLIENT_ID}
      - PROVIDERS_OIDC_CLIENT_SECRET=${PROVIDERS_OIDC_CLIENT_SECRET}
      - PROVIDERS_OIDC_ISSUER_URL=${PROVIDERS_OIDC_ISSUER_URL}
      - DEFAULT_PROVIDER=oidc
      - SECRET=${OAUTH_SECRET}
      - COOKIE_DOMAIN=${COMMON_DOMAIN}
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.${COMMON_DOMAIN}
      - URL_PATH=/_oauth
      - LOG_LEVEL=info
      - LIFETIME=2592000 # 30 days
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oauth.rule=Host(`oauth.${COMMON_DOMAIN}`)"
      - "traefik.http.routers.oauth.entrypoints=https"
      - "traefik.http.routers.oauth.service=oauth"
      - "traefik.http.routers.oauth.tls.certresolver=cloudflare"
      - "traefik.http.services.oauth.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181"
      - "traefik.http.middlewares.oauth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.oauth.middlewares=oauth"